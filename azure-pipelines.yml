trigger:
  branches:
    include:
      - main
      - feature/*

pr: none

# ✅ Job 1: Terraform Plan on 'agent-pool-plan'
jobs:
- job: TerraformPlan
  displayName: "Terraform Plan"
  pool: agent-ka-pool
  steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/module'
        backendServiceArm: 'servocon'
        backendAzureRmStorageAccountName: 'strgaccyaml'
        backendAzureRmContainerName: 'cntryaml'
        backendAzureRmKey: 'security.tfstate'

    - task: TerraformTask@5
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/module'
        environmentServiceNameAzureRM: 'servocon'

- job: SecurityScan



# # ✅ Job 2: Security Scan on Azure DevOps built-in server pool
# - job: SecurityScan
#   displayName: "Run Security Scan"
#   dependsOn: TerraformPlan
#   pool: server
#   steps:
#     - script: echo "Running security scan (replace this with actual scanner like Checkov, TFLint, etc.)"
#       displayName: "Security Scan"

# ✅ Job 3: Terraform Apply on 'agent-pool-apply', only on 'main' branch
- job: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: [TerraformPlan, SecurityScan]
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool: agent-ka-pool
  steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/module'
        environmentServiceNameAzureRM: 'servocon'
